plugins {
    id 'application'
}

group = 'com.ruppyrup.javapoet'

allprojects {
    version = '1.0-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }
}

application {
    mainClass = 'com.ruppyrup.javapoet.Main'
}


dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.6.1'
}

test {
    useJUnitPlatform()
}

sourceSets {
    test {
        java.srcDirs += "${buildDir}/generated"
    }
    generated {
        java {
            srcDirs("${buildDir}/generated")
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    // `integrationTestImplementation` extending from `implementation` means that all the declared dependencies of
    // the production code also become dependencies of the integration tests.
    generatedImplementation.extendsFrom implementation

    // Same for the `integrationTestRuntimeOnly` configuration
    generatedRuntimeOnly.extendsFrom runtimeOnly
}


task printSourceSetInformation() {

    doLast {
        sourceSets.each { srcSet ->
            println "[" + srcSet.name + "]"
            print "-->Source directories: " + srcSet.allJava.srcDirs + "\n"
            print "-->Output directories: " + srcSet.output.classesDirs.files + "\n"
            print "-->Compile classpath:\n"
            srcSet.compileClasspath.files.each {
                print "  " + it.path + "\n"
            }
            println ""
        }
    }
}